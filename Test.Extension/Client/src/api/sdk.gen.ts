// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-fetch';
import type { GetItemsData, GetItemsResponse, CreateItemData, CreateItemResponse, DeleteItemData, DeleteItemResponse, GetItemData, GetItemResponse, UpdateItemData, UpdateItemResponse } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export class V1Service {
    public static getItems<ThrowOnError extends boolean = false>(options?: Options<GetItemsData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).get<GetItemsResponse, unknown, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/mindburn/api/v1/items',
            ...options
        });
    }
    
    public static createItem<ThrowOnError extends boolean = false>(options?: Options<CreateItemData, ThrowOnError>) {
        return (options?.client ?? _heyApiClient).post<CreateItemResponse, unknown, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/mindburn/api/v1/items',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            }
        });
    }
    
    public static deleteItem<ThrowOnError extends boolean = false>(options: Options<DeleteItemData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).delete<DeleteItemResponse, unknown, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/mindburn/api/v1/items/{id}',
            ...options
        });
    }
    
    public static getItem<ThrowOnError extends boolean = false>(options: Options<GetItemData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).get<GetItemResponse, unknown, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/mindburn/api/v1/items/{id}',
            ...options
        });
    }
    
    public static updateItem<ThrowOnError extends boolean = false>(options: Options<UpdateItemData, ThrowOnError>) {
        return (options.client ?? _heyApiClient).put<UpdateItemResponse, unknown, ThrowOnError>({
            security: [
                {
                    scheme: 'bearer',
                    type: 'http'
                }
            ],
            url: '/umbraco/mindburn/api/v1/items/{id}',
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            }
        });
    }
    
}